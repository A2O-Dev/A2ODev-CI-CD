name: SSH Conection to Server InOffice

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: false

jobs:
  SSH-Conection-to-Server-inOffice:
    runs-on: ubuntu-latest

    steps:
      - name: Zerotier Configuration
        uses: zerotier/github-action@v1
        with:
          network_id: ${{ secrets.ZEROTIER_NETWORK_ID }}
          auth_token: ${{ secrets.ZEROTIER_CENTRAL_TOKEN }}

      - name: Ping Host
        shell: bash
        run: |
          count=3
          while ! ping -c 3 ${{ vars.IP_TARGET_SERVER }} ; do
            echo "waiting..." ;
            sleep 1 ;
            let count=count-1
          done
          echo "ping success to server inOffice ${{ vars.IP_TARGET_SERVER }}"
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install doppler-cli
        run: |
          sudo apt-get update && sudo apt-get install -y apt-transport-https ca-certificates curl gnupg
          curl -sLf --retry 3 --tlsv1.2 --proto "=https" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | sudo gpg --dearmor -o /usr/share/keyrings/doppler-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/doppler-archive-keyring.gpg] https://packages.doppler.com/public/cli/deb/debian any-version main" | sudo tee /etc/apt/sources.list.d/doppler-cli.list
          sudo apt-get update && sudo apt-get install doppler
      - name: Config Doppler-cli
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_FOR_SSH_KEYS }}
        run: |
          mkdir -p ~/.ssh
          doppler configure set token $DOPPLER_TOKEN
          doppler secrets get PRIVATE_RSA_KEY_FOR_SSH_GITHUB_ACTIONS --no-check-version --silent --plain > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Public RSA Key retrieved and saved to id_rsa"

      - name: SSH Connection Configuration
        shell: bash
        run: |
          cat ssh-config/known_hosts >> ~/.ssh/known_hosts
          cat ssh-config/config >> ~/.ssh/config
          chmod 600 ~/.ssh/id_rsa

      - name: Verify SSH Configuration
        run: |
          ls -l ~/.ssh
          cat ~/.ssh/known_hosts
          cat ~/.ssh/config
      
      - name: SSH Connection
        shell: bash
        run: | 
          ssh ${{ vars.SSH_USER_GITHUB_ACTIONS }}@${{ vars.IP_TARGET_SERVER }} 'whoami && hostname'
